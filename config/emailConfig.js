const nodemailer = require('nodemailer');

// C·∫•u h√¨nh email transporter v·ªõi App Password
const createTransporter = () => {
  // Ki·ªÉm tra bi·∫øn m√¥i tr∆∞·ªùng
  if (!process.env.EMAIL_USER || !process.env.EMAIL_PASSWORD) {
    console.error('‚ö†Ô∏è Thi·∫øu EMAIL_USER ho·∫∑c EMAIL_PASSWORD trong file .env');
    throw new Error('Email configuration missing');
  }

  console.log('üìß T·∫°o email transporter v·ªõi:', process.env.EMAIL_USER);

  return nodemailer.createTransport({
    service: 'gmail',
    auth: {
      user: process.env.EMAIL_USER,
      pass: process.env.EMAIL_PASSWORD
    },
    tls: {
      rejectUnauthorized: false
    }
  });
};

// Template email x√°c th·ª±c
const getVerificationEmailTemplate = (fullName, verificationLink) => {
  return {
    subject: 'üè• X√°c th·ª±c t√†i kho·∫£n HealingMedicine',
    html: `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="utf-8">
        <title>X√°c th·ª±c t√†i kho·∫£n</title>
        <style>
          body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
          }
          .header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 30px;
            text-align: center;
            border-radius: 10px 10px 0 0;
          }
          .content {
            background: #f9f9f9;
            padding: 30px;
            border-radius: 0 0 10px 10px;
          }
          .button {
            display: inline-block;
            background: #667eea;
            color: white;
            padding: 15px 30px;
            text-decoration: none;
            border-radius: 5px;
            margin: 20px 0;
            font-weight: bold;
          }
          .button:hover {
            background: #5a6fd8;
          }
          .footer {
            text-align: center;
            margin-top: 20px;
            font-size: 12px;
            color: #666;
          }
        </style>
      </head>
      <body>
        <div class="header">
          <h1>üè• HealingMedicine</h1>
          <p>Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi h·ªá th·ªëng chƒÉm s√≥c s·ª©c kh·ªèe</p>
        </div>
        <div class="content">
          <h2>Xin ch√†o ${fullName}!</h2>
          <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n t·∫°i HealingMedicine. ƒê·ªÉ ho√†n t·∫•t qu√° tr√¨nh ƒëƒÉng k√Ω, vui l√≤ng x√°c th·ª±c email c·ªßa b·∫°n b·∫±ng c√°ch nh·∫•p v√†o n√∫t b√™n d∆∞·ªõi:</p>
          
          <div style="text-align: center;">
            <a href="${verificationLink}" class="button">
              ‚úÖ X√°c th·ª±c t√†i kho·∫£n
            </a>
          </div>
          
          <p><strong>L∆∞u √Ω quan tr·ªçng:</strong></p>
          <ul>
            <li>Link x√°c th·ª±c n√†y ch·ªâ c√≥ hi·ªáu l·ª±c trong v√≤ng 24 gi·ªù</li>
            <li>Sau khi x√°c th·ª±c th√†nh c√¥ng, b·∫°n c√≥ th·ªÉ ƒëƒÉng nh·∫≠p v√†o h·ªá th·ªëng</li>
            <li>N·∫øu b·∫°n kh√¥ng th·ª±c hi·ªán x√°c th·ª±c, t√†i kho·∫£n s·∫Ω b·ªã x√≥a t·ª± ƒë·ªông</li>
          </ul>
          
          <p>N·∫øu b·∫°n kh√¥ng th·ªÉ nh·∫•p v√†o n√∫t, h√£y copy v√† paste link sau v√†o tr√¨nh duy·ªát:</p>
          <p style="word-break: break-all; background: #e9ecef; padding: 10px; border-radius: 5px;">
            ${verificationLink}
          </p>
          
          <p>N·∫øu b·∫°n kh√¥ng ƒëƒÉng k√Ω t√†i kho·∫£n n√†y, vui l√≤ng b·ªè qua email n√†y.</p>
        </div>
        <div class="footer">
          <p>¬© 2024 HealingMedicine. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
          <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</p>
        </div>
      </body>
      </html>
    `
  };
};

module.exports = {
  createTransporter,
  getVerificationEmailTemplate
};
